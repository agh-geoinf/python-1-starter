name: Build and Publish to GitHub Packages

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#          pip install pytest

#      - name: Run tests
#        run: pytest

create-tag-and-release:
  runs-on: ubuntu-latest
  needs: test
  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  steps:
    - name: Check out the code
      uses: actions/checkout@v2

    - name: Get the latest tag
      id: get_latest_tag
      run: echo ::set-output name=tag::$(git describe --tags --abbrev=0 || echo "v0.0.0")

    - name: Calculate the next tag
      id: calculate_tag
      run: |
        echo "Current tag: ${{ steps.get_latest_tag.outputs.tag }}"
        current_tag=${{ steps.get_latest_tag.outputs.tag }}
        version_without_v=${current_tag#v}
        IFS='.' read -r major minor patch <<< "$version_without_v"
        new_tag="v$major.$minor.$((patch + 1))"
        echo "New tag: $new_tag"
        echo ::set-output name=new_tag::$new_tag

    - name: Create new tag
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        git tag ${{ steps.calculate_tag.outputs.new_tag }}
        git push origin ${{ steps.calculate_tag.outputs.new_tag }}

    - name: Create GitHub release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.calculate_tag.outputs.new_tag }}
        release_name: Release ${{ steps.calculate_tag.outputs.new_tag }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

publish:
  runs-on: ubuntu-latest
  needs: create-tag-and-release
  if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
  steps:
    - name: Check out the code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Publish to GitHub Packages
      env:
        TWINE_USERNAME: ${{ github.actor }}
        TWINE_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python -m twine upload --repository-url https://upload.github.com/${{ github.repository }}/ dist/*